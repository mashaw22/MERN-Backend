{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/hooks/auth-hook.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","MainHeader","children","NavLinks","auth","useContext","to","exact","logoutTimer","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"2GAAA,6CAEaA,EAAcC,wBAAc,CACrCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,gCCPZ,0BAYeC,IARQ,SAAAC,GACrB,OACE,yBAAKC,UAAS,UAAKD,EAAME,WAAa,6BACpC,yBAAKD,UAAU,qB,6BCPrB,0CAYeE,IAPE,SAAAH,GACf,OAAOI,IAASC,aACd,yBAAKJ,UAAU,WAAWK,QAASN,EAAMM,UACzCC,SAASC,eAAe,oB,yRCLb,SAASC,EAAWT,GACjC,OACE,4BAAQC,UAAU,eACbD,EAAMU,U,iBCAA,SAASC,EAASX,GAC7B,IAAMY,EAAOC,qBAAWrB,KAE1B,OACE,wBAAIS,UAAU,aACV,4BACI,kBAAC,IAAD,CAASa,GAAG,IAAIC,OAAK,GAArB,cAEHH,EAAKlB,YACF,4BACI,kBAAC,IAAD,CAASoB,GAAE,WAAMF,EAAKjB,OAAX,YAAX,cAGPiB,EAAKlB,YACF,4BACI,kBAAC,IAAD,CAASoB,GAAG,eAAZ,eAGNF,EAAKlB,YACH,4BACI,kBAAC,IAAD,CAASoB,GAAG,SAAZ,iBAGPF,EAAKlB,YACF,4BACI,4BAAQY,QAASM,EAAKd,QAAtB,Y,IC7BZkB,E,QCoBWC,G,MAhBI,SAAAjB,GACjB,IAAMkB,EACJ,kBAACC,EAAA,EAAD,CACEC,GAAIpB,EAAMqB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb,2BAAOxB,UAAU,cAAcK,QAASN,EAAMM,SAAUN,EAAMU,WAIlE,OAAON,IAASC,aAAaa,EAASX,SAASC,eAAe,kB,QC2BjDkB,G,MArCQ,SAAA1B,GACrB,MAAwC2B,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMMC,EAAqB,WACzBD,GAAgB,IAGlB,OACE,kBAAC,IAAME,SAAP,KACGH,GAAgB,kBAACzB,EAAA,EAAD,CAAUG,QAASwB,IACpC,kBAAC,EAAD,CAAYT,KAAMO,EAActB,QAASwB,GACvC,yBAAK7B,UAAU,+BACb,kBAAC,EAAD,QAIJ,kBAAC,EAAD,KACE,4BAAQA,UAAU,4BAA4BK,QAlB1B,WACxBuB,GAAgB,KAkBV,+BACA,+BACA,gCAEF,wBAAI5B,UAAU,0BACZ,kBAAC,IAAD,CAAMa,GAAG,KAAT,eAEF,yBAAKb,UAAU,+BACb,kBAAC,EAAD,W,QC1BJ+B,EAAQC,IAAMC,MAAK,kBAAM,gCACzBC,EAAWF,IAAMC,MAAK,kBAAM,gCAC5BE,EAAaH,IAAMC,MAAK,kBAAM,gCAC9BG,EAAcJ,IAAMC,MAAK,kBAAM,gCAC/BI,EAAOL,IAAMC,MAAK,kBAAM,gCA0EfK,EAxEH,WACV,IAEIC,EAFJ,EHhBqB,WACnB,MAA0Bb,oBAAS,GAAnC,mBAAO/B,EAAP,KAAc6C,EAAd,KACA,EAAsDd,qBAAtD,mBAAOe,EAAP,KAA4BC,EAA5B,KACA,EAA4BhB,oBAAS,GAArC,mBAAOhC,EAAP,KAAeiD,EAAf,KAEM/C,EAAQgD,uBAAY,SAACC,EAAKlD,EAAOmD,GACrCN,EAAS7C,GACTgD,EAAUE,GACV,IAAMJ,EACJK,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACpDN,EAAuBD,GACvBQ,aAAaC,QACX,WACAC,KAAKC,UAAU,CACb1D,OAAQmD,EACRlD,MAAOA,EACP0D,WAAYZ,EAAoBa,mBAGnC,IAEGzD,EAAS+C,uBAAY,WACzBJ,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVM,aAAaM,WAAW,cACvB,IAsBH,OApBAC,qBAAU,WACR,GAAI7D,GAAS8C,EAAqB,CAChC,IAAMgB,EAAgBhB,EAAoBO,WAAY,IAAID,MAAOC,UACjEjC,EAAc2C,WAAW7D,EAAQ4D,QAEjCE,aAAa5C,KAEd,CAACpB,EAAOE,EAAQ4C,IAEnBe,qBAAU,WACR,IAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAEjDF,GACAA,EAAWjE,OACX,IAAIoD,KAAKa,EAAWP,YAAc,IAAIN,MAEtCnD,EAAMgE,EAAWlE,OAAQkE,EAAWjE,MAAO,IAAIoD,KAAKa,EAAWP,eAEhE,CAACzD,IAEG,CAAED,QAAOC,QAAOC,SAAQH,UGhCQqE,GAAjCpE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,OAAQH,EAA9B,EAA8BA,OA4C9B,OAvCE6C,EADE5C,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmB,OAAK,EAACkD,KAAK,KAChB,kBAACjC,EAAD,OAGF,kBAAC,IAAD,CAAOjB,OAAK,EAACkD,KAAK,mBAChB,kBAAC7B,EAAD,OAGF,kBAAC,IAAD,CAAOrB,OAAK,EAACkD,KAAK,eAChB,kBAAC9B,EAAD,OAGF,kBAAC,IAAD,CAAOpB,OAAK,EAACkD,KAAK,oBAChB,kBAAC5B,EAAD,OAEF,kBAAC,IAAD,CAAUvB,GAAG,OAKf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACkD,KAAK,KAChB,kBAACjC,EAAD,OAGF,kBAAC,IAAD,CAAOjB,OAAK,EAACkD,KAAK,mBAChB,kBAAC7B,EAAD,OAGF,kBAAC,IAAD,CAAOrB,OAAK,EAACkD,KAAK,SAChB,kBAAC3B,EAAD,OAEF,kBAAC,IAAD,CAAUxB,GAAG,WAMjB,kBAAC,IAAYoD,SAAb,CACEC,MAAO,CACLzE,aAAcE,EACdA,MAAOA,EACPD,OAAQA,EACRE,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACE,8BACE,kBAAC,WAAD,CACEsE,SACE,yBAAKnE,UAAU,UACb,kBAACF,EAAA,EAAD,QAGDyC,OC7EjBpC,IAASiE,OAAO,kBAAC,EAAD,MAAS9D,SAASC,eAAe,W","file":"static/js/main.a8eb9df3.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null, \r\n    login: () => {},\r\n    logout: () => {}\r\n})","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react'\r\nimport './MainHeader.css'\r\n\r\nexport default function MainHeader(props) {\r\n  return (\r\n    <header className='main-header'>\r\n        {props.children}\r\n    </header>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { AuthContext } from '../../context/auth-context'\r\n\r\nimport './NavLinks.css'\r\n\r\nexport default function NavLinks(props) {\r\n    const auth = useContext(AuthContext)\r\n\r\n  return (\r\n    <ul className='nav-links'>\r\n        <li>\r\n            <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">NEW PLACE</NavLink>\r\n            </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <button onClick={auth.logout}>LOGOUT</button>\r\n            </li>\r\n        )}\r\n    </ul>\r\n  )\r\n}\r\n","import { useState, useCallback, useEffect } from 'react'\r\n\r\nlet logoutTimer\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(false)\r\n    const [tokenExpirationDate, setTokenExpirationDate] = useState()\r\n    const [userId, setUserId] = useState(false)\r\n\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n      setToken(token)\r\n      setUserId(uid)\r\n      const tokenExpirationDate = \r\n        expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\r\n      setTokenExpirationDate(tokenExpirationDate)\r\n      localStorage.setItem(\r\n        'userData', \r\n        JSON.stringify({\r\n          userId: uid, \r\n          token: token, \r\n          expiration: tokenExpirationDate.toISOString()\r\n        })\r\n      )\r\n    }, [])\r\n    \r\n    const logout = useCallback(() => {\r\n      setToken(null)\r\n      setTokenExpirationDate(null)\r\n      setUserId(null)\r\n      localStorage.removeItem('userData')\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n      if (token && tokenExpirationDate) {\r\n        const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\r\n        logoutTimer = setTimeout(logout, remainingTime)\r\n      } else {\r\n        clearTimeout(logoutTimer)\r\n      }\r\n    }, [token, logout, tokenExpirationDate])\r\n  \r\n    useEffect(() => {\r\n      const storedData = JSON.parse(localStorage.getItem('userData'))\r\n      if (\r\n        storedData && \r\n        storedData.token && \r\n        new Date(storedData.expiration) > new Date() \r\n      ) {\r\n        login(storedData.userId, storedData.token, new Date(storedData.expiration))\r\n      }\r\n    }, [login])\r\n\r\n    return { token, login, logout, userId }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace'\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth'\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook'\n\nconst Users = React.lazy(() => import('./user/pages/Users'))\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth()\n  \n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route exact path=\"/\" >\n          <Users />\n        </Route>\n\n        <Route exact path=\"/:userId/places\">\n          <UserPlaces/>\n        </Route>\n\n        <Route exact path=\"/places/new\" >\n          <NewPlace />\n        </Route>\n\n        <Route exact path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\"/>\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route exact path=\"/\" >\n          <Users />\n        </Route>\n\n        <Route exact path=\"/:userId/places\">\n          <UserPlaces/>\n        </Route>\n\n        <Route exact path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\"/>\n      </Switch>\n    )\n  }\n\n  return (\n    <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n          <main>\n            <Suspense \n              fallback={\n                <div className='center'>\n                  <LoadingSpinner />\n                </div>\n              }>\n                {routes}\n              </Suspense>\n          </main>\n      </Router>\n    </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}