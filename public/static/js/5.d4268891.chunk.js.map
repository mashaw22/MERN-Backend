{"version":3,"sources":["shared/components/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/hooks/http-hook.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.js","places/pages/UpdatePlace.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Card","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","validator","trim","test","formReducer","state","action","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","id","inputData","formValidity","inputReducer","isTouched","Input","initialValue","idTouched","initialValid","inputState","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","UpdatePlace","auth","useContext","AuthContext","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","process","place","fetchPlace","placeUpdateSubmitHandler","JSON","stringify","Authorization","token","userId"],"mappings":"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","file":"static/js/5.d4268891.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useCallback, useRef, useEffect } from 'react'\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n\r\n    const activeHttpRequests = useRef([])\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true)\r\n        const httpAbortCtrl = new AbortController()\r\n        activeHttpRequests.current.push(httpAbortCtrl)\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            })\r\n    \r\n            const responseData = await response.json()\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            )\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n            }\r\n\r\n            setIsLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setError(err.message)\r\n            setIsLoading(false)\r\n            throw err\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n        }\r\n    }, [])\r\n\r\n    return { isLoading, error, sendRequest, clearError }\r\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport Backdrop from './Backdrop'\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n\r\n}\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel}/>}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props}/>\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true\r\n        for (const inputId in state.inputs) {\r\n          if (!state.inputs[inputId]) {\r\n            continue\r\n          }\r\n          if(inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        }\r\n      case 'SET_DATA':\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n      })\r\n\r\n      const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n          type: 'INPUT_CHANGE', \r\n          value: value, \r\n          isValid: isValid, \r\n          inputId: id \r\n        })\r\n      }, [])\r\n\r\n      const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n          type: 'SET_DATA',\r\n          inputs: inputData,\r\n          formIsValid: formValidity\r\n        })\r\n      }, [])\r\n\r\n      return [formState, inputHandler, setFormData]\r\n}","import React, { useReducer, useEffect } from 'react'\r\n\r\nimport { validate } from '../../util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val, \r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function Input(props) {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        idTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators: props.validators\r\n        })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input \r\n            id={props.id} \r\n            type={props.type} \r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea \r\n            id={props.id} \r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    )\r\n\r\n    \r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\r\nimport './PlaceForm.css'\r\n\r\n\r\nconst UpdatePlace = () => {\r\n    const auth = useContext(AuthContext)\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n    const [loadedPlace, setLoadedPlace] = useState()\r\n    const placeId = useParams().placeId\r\n    const history = useHistory()\r\n\r\n    const [formState, inputHandler, setFormData] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            }\r\n        }, \r\n        false\r\n    )\r\n\r\n    useEffect(() => {\r\n        const fetchPlace = async () => {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\r\n                )\r\n                setLoadedPlace(responseData.place)\r\n                setFormData(\r\n                    {\r\n                        title: {\r\n                            value: responseData.place.title,\r\n                            isValid: true\r\n                        },\r\n                        description: {\r\n                            value: responseData.place.description,\r\n                            isValid: true\r\n                        }\r\n                    }, \r\n                    true\r\n                )\r\n            } catch (err) {}\r\n        }\r\n        fetchPlace()\r\n    }, [sendRequest, placeId, setFormData])\r\n\r\n    const placeUpdateSubmitHandler = async event => {\r\n        event.preventDefault()\r\n        try {\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n                'PATCH',\r\n                JSON.stringify({\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value\r\n                }), {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + auth.token\r\n                }\r\n            )\r\n            history.push('/' + auth.userId + '/places')\r\n        } catch (err) {}\r\n    }\r\n    \r\n    if (isLoading) {\r\n        return (\r\n            <div className='center'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    if (!loadedPlace && !error) {\r\n        return (\r\n            <div className='center'>\r\n                <Card>\r\n                    <h2>Could not find place!</h2>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError}/>\r\n            {!isLoading && loadedPlace && \r\n                <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n                    <Input \r\n                        id=\"title\" \r\n                        element=\"input\"\r\n                        type=\"text\"\r\n                        label=\"Title\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a valid title\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.title}\r\n                        initialValid={true}\r\n                    />\r\n                    <Input \r\n                        id=\"description\" \r\n                        element=\"textarea\"\r\n                        label=\"Description\"\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid description (min. 5 characters.\"\r\n                        onInput={inputHandler}\r\n                        initialValue={loadedPlace.description}\r\n                        initialValid={true}\r\n                    />\r\n                    <Button type=\"submit\" disabled={!formState.isValid}>\r\n                        UPDATE PLACE\r\n                    </Button>\r\n                </form>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePlace\r\n"],"sourceRoot":""}