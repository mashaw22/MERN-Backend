{"version":3,"sources":["shared/components/FormElements/Button.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/hooks/http-hook.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","validator","trim","test","formReducer","state","action","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","id","inputData","formValidity","inputReducer","isTouched","Input","initialValue","idTouched","initialValid","inputState","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","NewPlace","auth","useContext","AuthContext","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","process","Authorization","token","asOverlay"],"mappings":"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","file":"static/js/4.5d7e69fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useState, useCallback, useRef, useEffect } from 'react'\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState()\r\n\r\n    const activeHttpRequests = useRef([])\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true)\r\n        const httpAbortCtrl = new AbortController()\r\n        activeHttpRequests.current.push(httpAbortCtrl)\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortCtrl.signal\r\n            })\r\n    \r\n            const responseData = await response.json()\r\n\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortCtrl\r\n            )\r\n    \r\n            if (!response.ok) {\r\n                throw new Error(responseData.message)\r\n            }\r\n\r\n            setIsLoading(false)\r\n            return responseData\r\n        } catch (err) {\r\n            setError(err.message)\r\n            setIsLoading(false)\r\n            throw err\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => {\r\n        setError(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\r\n        }\r\n    }, [])\r\n\r\n    return { isLoading, error, sendRequest, clearError }\r\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nimport Backdrop from './Backdrop'\r\nimport './Modal.css'\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'))\r\n\r\n}\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.show && <Backdrop onClick={props.onCancel}/>}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props}/>\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useCallback, useReducer } from 'react'\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true\r\n        for (const inputId in state.inputs) {\r\n          if (!state.inputs[inputId]) {\r\n            continue\r\n          }\r\n          if(inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        }\r\n      case 'SET_DATA':\r\n        return {\r\n          inputs: action.inputs,\r\n          isValid: action.formIsValid\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n      })\r\n\r\n      const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n          type: 'INPUT_CHANGE', \r\n          value: value, \r\n          isValid: isValid, \r\n          inputId: id \r\n        })\r\n      }, [])\r\n\r\n      const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n          type: 'SET_DATA',\r\n          inputs: inputData,\r\n          formIsValid: formValidity\r\n        })\r\n      }, [])\r\n\r\n      return [formState, inputHandler, setFormData]\r\n}","import React, { useReducer, useEffect } from 'react'\r\n\r\nimport { validate } from '../../util/validators'\r\nimport './Input.css'\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val, \r\n                isValid: validate(action.val, action.validators)\r\n            }\r\n        case 'TOUCH': {\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        }            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function Input(props) {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '',\r\n        idTouched: false,\r\n        isValid: props.initialValid || false\r\n    })\r\n\r\n    const { id, onInput } = props\r\n    const { value, isValid } = inputState\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators: props.validators\r\n        })\r\n    }\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    }\r\n\r\n    const element = props.element === 'input' ? (\r\n        <input \r\n            id={props.id} \r\n            type={props.type} \r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea \r\n            id={props.id} \r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    )\r\n\r\n    \r\n  return (\r\n    <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n        <label htmlFor={props.id}>{props.label}</label>\r\n        {element}\r\n        {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\r\n\r\nimport Button from './Button'\r\nimport './ImageUpload.css'\r\n\r\nexport default function ImageUpload(props) {\r\n    const [file, setFile] = useState()\r\n    const [previewUrl, setPreviewUrl] = useState()\r\n    const [isValid, setIsValid] = useState()\r\n\r\n    const filePickerRef = useRef()\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return\r\n        }\r\n        const fileReader = new FileReader()\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file)\r\n    }, [file])\r\n    \r\n    const pickedImageHandler = event => {\r\n        let pickedFile\r\n        let fileIsValid = isValid\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0]\r\n            setFile(pickedFile)\r\n            setIsValid(true)\r\n            fileIsValid = true\r\n        } else {\r\n            setIsValid(false)\r\n            fileIsValid = false\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid)\r\n    }\r\n    \r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click()\r\n    }\r\n\r\n  return (\r\n    <div className='form-control'>\r\n        <input \r\n            id={props.id} \r\n            ref={filePickerRef}\r\n            style={{display: 'none'}} \r\n            type=\"file\" \r\n            accept=\".jpg,.png,.jpeg\"\r\n            onChange={pickedImageHandler}\r\n        />\r\n        <div className={`image-upload ${props.center && 'center'}`}>\r\n            <div className='image-upload__preview'>\r\n                {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                {!previewUrl && <p>Please choose an image.</p>}\r\n            </div>\r\n            <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\r\n        </div>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from '../../shared/hooks/form-hook'\r\nimport { useHttpClient } from '../../shared/hooks/http-hook'\r\nimport { AuthContext } from '../../shared/context/auth-context'\r\n\r\nimport Input from '../../shared/components/FormElements/Input'\r\nimport Button from '../../shared/components/FormElements/Button'\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal'\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner'\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload'\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\r\nimport './PlaceForm.css'\r\n\r\nexport default function NewPlace() {\r\n  const auth = useContext(AuthContext)\r\n  const {isLoading, error, sendRequest, clearError} = useHttpClient()\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  )\r\n\r\n  const history = useHistory()\r\n  \r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault()\r\n    try {\r\n      const formData = new FormData()\r\n      formData.append('title', formState.inputs.title.value)\r\n      formData.append('description', formState.inputs.description.value)\r\n      formData.append('address', formState.inputs.address.value)\r\n      formData.append('image', formState.inputs.image.value)\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + '/places', \r\n        'POST', \r\n        formData,\r\n        { Authorization: 'Bearer ' + auth.token }\r\n      )\r\n      history.push('/')\r\n    } catch (err) {}\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal  error={error} onClear={clearError}/> \r\n      {isLoading && <LoadingSpinner asOverlay/>}\r\n      <form className='place-form' onSubmit={placeSubmitHandler}>\r\n        <Input \r\n          id=\"title\"\r\n          element=\"input\" \r\n          type=\"text\" \r\n          label=\"Title\" \r\n          validators={[VALIDATOR_REQUIRE()]} \r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input \r\n          id=\"description\"\r\n          element=\"textarea\" \r\n          label=\"Description\" \r\n          validators={[VALIDATOR_MINLENGTH(5)]} \r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input \r\n          id=\"address\"\r\n          element=\"input\" \r\n          label=\"Address\" \r\n          validators={[VALIDATOR_REQUIRE]} \r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload \r\n          id=\"image\" \r\n          onInput={inputHandler} \r\n          errorText=\"Please provide and image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n"],"sourceRoot":""}